This is SBCL 2.0.0, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
To load "kenzo":
  Load 1 ASDF system:
    kenzo
; Loading "kenzo"


(DEF SMP-DELTAB2
     (BUILD-SMST :CMPR
                 #'(LAMBDA (GSM1 GSM2)
                     (IF (REST GSM1)
                         (L-CMPR GSM1 GSM2)
                         :EQUAL))
                 :BASIS :LOCALLY-EFFECTIVE :BSPN '(0) :FACE
                 #'(LAMBDA (I DMN GSM)
                     (CASE DMN (0 #) (1 #) (2 #) (OTHERWISE #)))
                 :ORGN ...))
==>
[K1 Simplicial-Set]

(CMPR SMP-DELTAB2 '(5) '(0))
==>
:EQUAL

(? SMP-DELTAB2 2 '(0 1 2))
==>

----------------------------------------------------------------------{CMBN 1}
------------------------------------------------------------------------------


(? SMP-DELTAB2 3 '(0 1 2 3))
==>

----------------------------------------------------------------------{CMBN 2}
<-1 * (0 1 2)>
<1 * (0 1 3)>
<-1 * (0 2 3)>
<1 * (1 2 3)>
------------------------------------------------------------------------------


(DEF PRECOBAR (VRTC-COBAR SMP-DELTAB2))
==>
[K6 Chain-Complex]

(BSGN PRECOBAR)
==>
<<AlLp>>

(DEF LOOP-1 (ALLP 2 '(0 1 2 3)))
==>
<<AlLp[2 (0 1 2 3)]>>

(DEF LOOP-2 (ALLP 2 '(1 2 3 4)))
==>
<<AlLp[2 (1 2 3 4)]>>

(CMPR PRECOBAR LOOP-1 LOOP-2)
==>
:LESS

(? PRECOBAR 2 LOOP-1)
==>

----------------------------------------------------------------------{CMBN 1}
<1 * <<AlLp[1 (0 1 2)]>>>
<-1 * <<AlLp[1 (0 1 3)]>>>
<1 * <<AlLp[1 (0 2 3)]>>>
<-1 * <<AlLp[1 (1 2 3)]>>>
------------------------------------------------------------------------------


(? PRECOBAR (? PRECOBAR 2 LOOP-1))
==>

----------------------------------------------------------------------{CMBN 0}
------------------------------------------------------------------------------


(DEF LOOP-3 (ALLP 3 '(0 1 2 3 4) 3 '(1 3 5 7 9)))
==>
<<AlLp[3 (0 1 2 3 4)][3 (1 3 5 7 9)]>>

(? PRECOBAR 6 LOOP-3)
==>

----------------------------------------------------------------------{CMBN 5}
<1 * <<AlLp[2 (0 1 2 3)][3 (1 3 5 7 9)]>>>
<-1 * <<AlLp[2 (0 1 2 4)][3 (1 3 5 7 9)]>>>
<1 * <<AlLp[2 (0 1 3 4)][3 (1 3 5 7 9)]>>>
<-1 * <<AlLp[2 (0 2 3 4)][3 (1 3 5 7 9)]>>>
<1 * <<AlLp[2 (1 2 3 4)][3 (1 3 5 7 9)]>>>
<1 * <<AlLp[3 (0 1 2 3 4)][2 (1 3 5 7)]>>>
<-1 * <<AlLp[3 (0 1 2 3 4)][2 (1 3 5 9)]>>>
<1 * <<AlLp[3 (0 1 2 3 4)][2 (1 3 7 9)]>>>
<-1 * <<AlLp[3 (0 1 2 3 4)][2 (1 5 7 9)]>>>
<1 * <<AlLp[3 (0 1 2 3 4)][2 (3 5 7 9)]>>>
------------------------------------------------------------------------------


(? PRECOBAR (? PRECOBAR 6 LOOP-3))
==>

----------------------------------------------------------------------{CMBN 4}
------------------------------------------------------------------------------


(DEF LOOP-4 (ALLP 3 '(0 1 4 5 6) 4 '(2 3 4 5 6 8) 4 '(0 4 5 6 7 8)))
==>
<<AlLp[3 (0 1 4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>

(? PRECOBAR 11 LOOP-4)
==>

----------------------------------------------------------------------{CMBN 10}
<-1 * <<AlLp[2 (0 1 4 5)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[2 (0 1 4 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[2 (0 1 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[2 (0 4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[2 (1 4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 4 5 6)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 4 5 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 4 6 8)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][3 (2 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
... ...
------------------------------------------------------------------------------


(? PRECOBAR (? PRECOBAR 11 LOOP-4))
==>

----------------------------------------------------------------------{CMBN 9}
------------------------------------------------------------------------------


(CPRD SMP-DELTAB2 2 '(0 1 2))
==>

----------------------------------------------------------------------{CMBN 2}
<1 * <TnPr (0) (0 1 2)>>
<1 * <TnPr (0 1 2) (0)>>
------------------------------------------------------------------------------


(CPRD SMP-DELTAB2 3 '(1 2 3 4))
==>

----------------------------------------------------------------------{CMBN 3}
<1 * <TnPr (0) (1 2 3 4)>>
<1 * <TnPr (1 2 3 4) (0)>>
------------------------------------------------------------------------------


(CPRD SMP-DELTAB2 4 '(0 1 2 3 4))
==>

----------------------------------------------------------------------{CMBN 4}
<1 * <TnPr (0) (0 1 2 3 4)>>
<1 * <TnPr (0 1 2) (2 3 4)>>
<1 * <TnPr (0 1 2 3 4) (0)>>
------------------------------------------------------------------------------


(DEF DH-MRPH (COBAR-HRZN-DFFR SMP-DELTAB2))
==>
[K8 Morphism (degree -1): K6 -> K6]

LOOP-1
==>
<<AlLp[2 (0 1 2 3)]>>

(? DH-MRPH 2 LOOP-1)
==>

----------------------------------------------------------------------{CMBN 1}
------------------------------------------------------------------------------


LOOP-3
==>
<<AlLp[3 (0 1 2 3 4)][3 (1 3 5 7 9)]>>

(? DH-MRPH 6 LOOP-3)
==>

----------------------------------------------------------------------{CMBN 5}
<1 * <<AlLp[1 (0 1 2)][1 (2 3 4)][3 (1 3 5 7 9)]>>>
<-1 * <<AlLp[3 (0 1 2 3 4)][1 (1 3 5)][1 (5 7 9)]>>>
------------------------------------------------------------------------------


(? DH-MRPH (? DH-MRPH 6 LOOP-3))
==>

----------------------------------------------------------------------{CMBN 4}
------------------------------------------------------------------------------


LOOP-4
==>
<<AlLp[3 (0 1 4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>

(? DH-MRPH 11 LOOP-4)
==>

----------------------------------------------------------------------{CMBN 10}
<-1 * <<AlLp[1 (0 1 4)][1 (4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][1 (2 3 4)][2 (4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][2 (2 3 4 5)][1 (5 6 8)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[3 (0 1 4 5 6)][4 (2 3 4 5 6 8)][1 (0 4 5)][2 (5 6 7 8)]>>>
<-1 * <<AlLp[3 (0 1 4 5 6)][4 (2 3 4 5 6 8)][2 (0 4 5 6)][1 (6 7 8)]>>>
------------------------------------------------------------------------------


(? DH-MRPH (? DH-MRPH 11 LOOP-4))
==>

----------------------------------------------------------------------{CMBN 9}
------------------------------------------------------------------------------


(DEF COBAR-DELTAB2 (COBAR SMP-DELTAB2))
==>
[K9 Chain-Complex]

LOOP-3
==>
<<AlLp[3 (0 1 2 3 4)][3 (1 3 5 7 9)]>>

(? COBAR-DELTAB2 6 LOOP-3)
==>

----------------------------------------------------------------------{CMBN 5}
<1 * <<AlLp[2 (0 1 2 3)][3 (1 3 5 7 9)]>>>
<-1 * <<AlLp[2 (0 1 2 4)][3 (1 3 5 7 9)]>>>
<1 * <<AlLp[2 (0 1 3 4)][3 (1 3 5 7 9)]>>>
<-1 * <<AlLp[2 (0 2 3 4)][3 (1 3 5 7 9)]>>>
<1 * <<AlLp[2 (1 2 3 4)][3 (1 3 5 7 9)]>>>
<1 * <<AlLp[3 (0 1 2 3 4)][2 (1 3 5 7)]>>>
<-1 * <<AlLp[3 (0 1 2 3 4)][2 (1 3 5 9)]>>>
<1 * <<AlLp[3 (0 1 2 3 4)][2 (1 3 7 9)]>>>
<-1 * <<AlLp[3 (0 1 2 3 4)][2 (1 5 7 9)]>>>
<1 * <<AlLp[3 (0 1 2 3 4)][2 (3 5 7 9)]>>>
... ...
------------------------------------------------------------------------------


(? COBAR-DELTAB2 (? COBAR-DELTAB2 6 LOOP-3))
==>

----------------------------------------------------------------------{CMBN 4}
------------------------------------------------------------------------------


LOOP-4
==>
<<AlLp[3 (0 1 4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>

(? COBAR-DELTAB2 11 LOOP-4)
==>

----------------------------------------------------------------------{CMBN 10}
<-1 * <<AlLp[2 (0 1 4 5)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[2 (0 1 4 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[2 (0 1 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[2 (0 4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[2 (1 4 5 6)][4 (2 3 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 4 5 6)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 4 5 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 4 6 8)][4 (0 4 5 6 7 8)]>>>
<-1 * <<AlLp[3 (0 1 4 5 6)][3 (2 3 5 6 8)][4 (0 4 5 6 7 8)]>>>
<1 * <<AlLp[3 (0 1 4 5 6)][3 (2 4 5 6 8)][4 (0 4 5 6 7 8)]>>>
... ...
------------------------------------------------------------------------------


(? COBAR-DELTAB2 (? COBAR-DELTAB2 11 LOOP-4))
==>

----------------------------------------------------------------------{CMBN 9}
------------------------------------------------------------------------------

